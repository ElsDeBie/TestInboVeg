header_info <- function (header) {
dbGetQuery(con,
"SELECT
ivR.[RecordingGivid]
, ivS.Name
, ivR.UserReference
, ivR.LocationCode
, ivR.Latitude
, ivR.Longitude
, ivR.Area
, ivR.Length
, ivR.Width
, ivR.SurveyId
, coalesce(area, convert( nvarchar(20),ivR.Length * ivR.Width)) as B
FROM [dbo].[ivRecording] ivR
INNER JOIN [dbo].[ivSurvey] ivS on ivS.Id = ivR.SurveyId
where ivR.NeedsWork = 0
# AND ivR.Length * ivR.Width is not null
# AND ivR.Area is null
# AND ivS.Name = 'Sigma_LSVI_2012'
# AND ivR.RecordingGivid = 'IV2012052416332561'
;")
}
library(knitr)
library(tidyverse)
library(DBI)
con <- dbConnect(odbc::odbc(), dsn="Cydonia-prd")
header_info <- function (ivRecording) {
dbGetQuery(con,
"SELECT
ivR.[RecordingGivid]
, ivS.Name
, ivR.UserReference
, ivR.LocationCode
, ivR.Latitude
, ivR.Longitude
, ivR.Area
, ivR.Length
, ivR.Width
, ivR.SurveyId
, coalesce(area, convert( nvarchar(20),ivR.Length * ivR.Width)) as B
FROM [dbo].[ivRecording] ivR
INNER JOIN [dbo].[ivSurvey] ivS on ivS.Id = ivR.SurveyId
where ivR.NeedsWork = 0
# AND ivR.Length * ivR.Width is not null
# AND ivR.Area is null
# AND ivS.Name = 'Sigma_LSVI_2012'
# AND ivR.RecordingGivid = 'IV2012052416332561'
;")
}
headerRec <- header_info(ivR.RecordingGivid == 'IV2012052416332561')
header_info <- function (ivRecording) {
dbGetQuery(con,
"SELECT
ivR.[RecordingGivid]
, ivS.Name
, ivR.UserReference
, ivR.LocationCode
, ivR.Latitude
, ivR.Longitude
, ivR.Area
, ivR.Length
, ivR.Width
, ivR.SurveyId
, coalesce(area, convert( nvarchar(20),ivR.Length * ivR.Width)) as B
FROM [dbo].[ivRecording] ivR
INNER JOIN [dbo].[ivSurvey] ivS on ivS.Id = ivR.SurveyId
where ivR.NeedsWork = 0
;")
}
headerRec <- header_info(ivR.RecordingGivid == 'IV2012052416332561')
headerRec
headerRec <- header_info(ivR.RecordingGivid == IV2012052416332561)
header_info <- function (ivRecording.RecordingGivid) {
dbGetQuery(con,
"SELECT
ivR.[RecordingGivid]
, ivS.Name
, ivR.UserReference
, ivR.LocationCode
, ivR.Latitude
, ivR.Longitude
, ivR.Area
, ivR.Length
, ivR.Width
, ivR.SurveyId
, coalesce(area, convert( nvarchar(20),ivR.Length * ivR.Width)) as B
FROM [dbo].[ivRecording] ivR
INNER JOIN [dbo].[ivSurvey] ivS on ivS.Id = ivR.SurveyId
where ivR.NeedsWork = 0
;")
}
headerRec <- header_info(ivRecording.RecordingGivid == IV2012052416332561)
headerRec
headerRec <- header_info(ivRecording$RecordingGivid = IV2012052416332561)
headerRec <- header_info(ivRecording$RecordingGivid == IV2012052416332561)
headerRec
RecordingGivid <- c(IV2012052416332561, IV2012080710541034)
RecGivid <- c(IV2012052416332561, IV2012080710541034)
RecGivid <- c('IV2012052416332561', 'IV2012080710541034')
##
headerRec <- header_info(RecordingGivid = RecGivid)
RecGivid
header_info <- function(RecordingGivid) {
dbGetQuery(con,
"SELECT
ivR.[RecordingGivid]
, ivS.Name
, ivR.UserReference
, ivR.LocationCode
, ivR.Latitude
, ivR.Longitude
, ivR.Area
, ivR.Length
, ivR.Width
, ivR.SurveyId
, coalesce(area, convert( nvarchar(20),ivR.Length * ivR.Width)) as B
FROM [dbo].[ivRecording] ivR
INNER JOIN [dbo].[ivSurvey] ivS on ivS.Id = ivR.SurveyId
where ivR.NeedsWork = 0
AND ivR.[RecordingGivid] = RecordingGIVID
;")
}
headerRec <- header_info(RecordingGivid = RecGivid)
headerRec <- header_info(RecordingGivid = RecGivid)
headerRec
library(knitr)
library(tidyverse)
library(DBI)
con <- dbConnect(odbc::odbc(), dsn = "Cydonia-prd")
# Headerinfo
header_info <- function(RecordingGivid) {
dbGetQuery(con,
"SELECT
ivR.[RecordingGivid]
, ivS.Name
, ivR.UserReference
, ivR.LocationCode
, ivR.Latitude
, ivR.Longitude
, ivR.Area
, ivR.Length
, ivR.Width
, ivR.SurveyId
, coalesce(area, convert( nvarchar(20),ivR.Length * ivR.Width)) as B
FROM [dbo].[ivRecording] ivR
INNER JOIN [dbo].[ivSurvey] ivS on ivS.Id = ivR.SurveyId
where ivR.NeedsWork = 0
AND ivR.[RecordingGivid] = RecordingGIVID
;")
}
headerRec <- header_info(RecordingGivid = RecGivid)
headerRec
library(knitr)
library(tidyverse)
library(DBI)
opts_chunk$set(echo = TRUE)
iv_kopinfo <- dbGetQuery(con,
"SELECT
ivRecording.RecordingGivid,
ivRecording.UserReference,
ivRecording.LocationCode,
ivRecording.Latitude,
ivRecording.Longitude,
ivRecording.Area,
ivRecording.SurveyId,
ivRecTypeD.Name,
ivRecording.NeedsWork
FROM ivRecTypeD
INNER JOIN ivRecording ON ivRecTypeD.ID = ivRecording.RecTypeID
WHERE 1=1
AND ivRecTypeD.Name IN ('Classic', 'Classic-emmer', 'Classic-ketting')
--AND ivSurvey.Name IN ('Sigma_LSVI_2012', '')
;")
View(iv_kopinfo)
View(iv_kopinfo)
headerRec <- header_info('IV2012052416332561')
headerRec
str(iv_kopinfo)
RecordingGivid <- c("IV2012052416332561", "IV2012080710541034")
RecordingGivid
headerRec <- header_info("IV2012052416332561")
headerRec
headerRec <- header_info(RecordingGivid)
headerRec
header_info <- function(RecordingGivid) {
dbGetQuery(con,
"SELECT
ivR.[RecordingGivid]
, ivS.Name
, ivR.UserReference
, ivR.LocationCode
, ivR.Latitude
, ivR.Longitude
, ivR.Area
, ivR.Length
, ivR.Width
, ivR.SurveyId
, coalesce(area, convert( nvarchar(20),ivR.Length * ivR.Width)) as B
FROM [dbo].[ivRecording] ivR
INNER JOIN [dbo].[ivSurvey] ivS on ivS.Id = ivR.SurveyId
where ivR.NeedsWork = 0
AND ivR.[RecordingGivid] = 'IV2012080710541034'
;")
}
headerRec <- header_info(RecordingGivid)
## INBOVEG queries uit sqlSMSS omzetten naar functies
library(knitr)
library(tidyverse)
library(DBI)
con <- dbConnect(odbc::odbc(), dsn = "Cydonia-prd")
# Headerinfo
header_info <- function(RecordingGivid) {
dbGetQuery(con,
"SELECT
ivR.[RecordingGivid]
, ivS.Name
, ivR.UserReference
, ivR.LocationCode
, ivR.Latitude
, ivR.Longitude
, ivR.Area
, ivR.Length
, ivR.Width
, ivR.SurveyId
, coalesce(area, convert( nvarchar(20),ivR.Length * ivR.Width)) as B
FROM [dbo].[ivRecording] ivR
INNER JOIN [dbo].[ivSurvey] ivS on ivS.Id = ivR.SurveyId
where ivR.NeedsWork = 0
AND ivR.[RecordingGivid] = 'IV2012080710541034'
;")
}
headerRec <- header_info(RecordingGivid)
headerRec
## INBOVEG queries uit sqlSMSS omzetten naar functies
library(knitr)
library(tidyverse)
library(DBI)
con <- dbConnect(odbc::odbc(), dsn = "Cydonia-prd")
# Headerinfo
header_info <- function(RecordingGivid) {
dbGetQuery(con,
"SELECT
ivR.[RecordingGivid]
, ivS.Name
, ivR.UserReference
, ivR.LocationCode
, ivR.Latitude
, ivR.Longitude
, ivR.Area
, ivR.Length
, ivR.Width
, ivR.SurveyId
, coalesce(area, convert( nvarchar(20),ivR.Length * ivR.Width)) as B
FROM [dbo].[ivRecording] ivR
INNER JOIN [dbo].[ivSurvey] ivS on ivS.Id = ivR.SurveyId
where ivR.NeedsWork = 0
AND ivR.[RecordingGivid] = 'IV2012080710541034'
;")
}
for (SurveyId in 'Sigma_LSVI_2012') {
header_info(RecordingGivid)
}
eaderRec <- for (SurveyId in 'Sigma_LSVI_2012') {
header_info(RecordingGivid)
}
headerRec <- for (SurveyId in 'Sigma_LSVI_2012') {
header_info(RecordingGivid)
}
headerRec
headerRec <- for (RecordingGivid in 'IV2012080710541034') {
header_info(RecordingGivid)
}
headerRec
header_info <- function(RecordingGivid) {
dbGetQuery(con,
"SELECT
ivR.[RecordingGivid]
, ivS.Name
, ivR.UserReference
, ivR.LocationCode
, ivR.Latitude
, ivR.Longitude
, ivR.Area
, ivR.Length
, ivR.Width
, ivR.SurveyId
, coalesce(area, convert( nvarchar(20),ivR.Length * ivR.Width)) as B
FROM [dbo].[ivRecording] ivR
INNER JOIN [dbo].[ivSurvey] ivS on ivS.Id = ivR.SurveyId
where ivR.NeedsWork = 0
;")
}
headerRec <- for (RecordingGivid in 'IV2012080710541034') {
header_info(RecordingGivid)
}
headerRec
## INBOVEG queries uit sqlSMSS omzetten naar functies
library(knitr)
library(tidyverse)
library(DBI)
con <- dbConnect(odbc::odbc(), dsn = "Cydonia-prd")
# Headerinfo
header_info <- function(RecordingGivid) {
dbGetQuery(con,
"SELECT
ivR.[RecordingGivid]
, ivS.Name
, ivR.UserReference
, ivR.LocationCode
, ivR.Latitude
, ivR.Longitude
, ivR.Area
, ivR.Length
, ivR.Width
, ivR.SurveyId
, coalesce(area, convert( nvarchar(20),ivR.Length * ivR.Width)) as B
FROM [dbo].[ivRecording] ivR
INNER JOIN [dbo].[ivSurvey] ivS on ivS.Id = ivR.SurveyId
where ivR.NeedsWork = 0
;")
}
# AND ivR.[RecordingGivid] = 'IV2012080710541034'
headerRec <- for (RecordingGivid in 'IV2012080710541034') {
header_info(RecordingGivid)
}
headerRec
header_info
header_info(RecordingGivid = 'IV2012080710541034' )
source('C:/Users/els_debie/Google Drive/Projecten/INBOVEG/ConnectieDatabase/R_TestInboVeg/sql_Functies.R')
